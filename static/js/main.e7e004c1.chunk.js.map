{"version":3,"sources":["redux/Contact/themeContactsReducer.js","redux/store.js","componets/routes.js","componets/PrivateRoute.js","componets/PublicRoute.js","componets/Navigation/Navigation.js","componets/UserMenu/UserMenu.js","componets/Header/Header.js","componets/Body/Body.js","componets/App.js","index.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/Contact/contactActions.js","componets/Navigation/Navigation.module.css","redux/auth/authActions.js","contex/ThemeContext.js","componets/Header/Header.module.css","redux/Contact/contactsSelectors.js","redux/auth/authReducer.js","redux/Contact/contactsReducer.js","componets/UserMenu/UserMenu.module.css","componets/Body/Body.module.css"],"names":["theme","createReducer","onChangeTheme","state","payload","combineReducers","persistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","themePhonebook","themeContactsReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","path","label","exact","component","lazy","private","restricted","connect","isAuthenticated","authSelectors","Component","routeProps","render","props","to","className","s","menu_navigation","menu_link","activeClassName","menu_ActiveLink","styles","container","display","alignItems","avatar","marginRight","name","fontWeight","mDTP","onLogout","authOperations","logOut","getUserName","style","src","alt","width","Button","variant","color","type","button","onClick","toggleTheme","contactsSelectors","getTheme","background","styleConxt","headerBg","fontColor","theme_selector","switch","onChange","currentTarget","checked","slider","children","body","bodybg","App","this","getUser","fallback","margin","routes","map","route","getCurrentUser","ReactDOM","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","data","registerSuccess","registerError","logoutRequest","logoutSuccess","error","logoutError","logIn","loginRequest","loginSuccess","loginError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","user","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","onChangeFilter","overlapToggle","module","exports","themeConfig","light","dark","getContacts","items","getFilter","filter","getVisibleTasks","createSelector","contact","toLowerCase","includes","getContactById","_","id","find","getError","getOverlap","overlap","initialUserState","email","onError"],"mappings":"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","file":"static/js/main.e7e004c1.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { onChangeTheme } from './contactActions';\r\n\r\nconst changeTheme = (state, { payload }) => (payload ? 'dark' : 'light');\r\n\r\nconst theme = createReducer('light', {\r\n  [onChangeTheme]: changeTheme,\r\n});\r\n\r\nexport default combineReducers({\r\n  theme,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './Contact/contactsReducer';\r\nimport themeContactsReducer from './Contact/themeContactsReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    themePhonebook: themeContactsReducer,\r\n    auth: persistReducer(persistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/goit-react-hw-09-phonebook_final/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./views/HomeView.js')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/goit-react-hw-09-phonebook_final/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./views/RegisterView.js')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/goit-react-hw-09-phonebook_final/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./views/LoginView.js')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/goit-react-hw-09-phonebook_final/phonebook',\r\n    label: 'Phonebook',\r\n    exact: true,\r\n    component: lazy(() => import('./views/PhoneBookView')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/phonebook\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav className={s.menu_navigation}>\r\n    <NavLink\r\n      to=\"/goit-react-hw-09-phonebook_final/\"\r\n      exact\r\n      className={s.menu_link}\r\n      activeClassName={s.menu_ActiveLink}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated ? (\r\n      <NavLink\r\n        to=\"/goit-react-hw-09-phonebook_final/phonebook\"\r\n        exact\r\n        className={s.menu_link}\r\n        activeClassName={s.menu_ActiveLink}\r\n      >\r\n        Phonebook\r\n      </NavLink>\r\n    ) : (\r\n      <>\r\n        {' '}\r\n        <NavLink\r\n          to=\"/goit-react-hw-09-phonebook_final/register\"\r\n          exact\r\n          className={s.menu_link}\r\n          activeClassName={s.menu_ActiveLink}\r\n        >\r\n          Register\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/goit-react-hw-09-phonebook_final/login\"\r\n          exact\r\n          className={s.menu_link}\r\n          activeClassName={s.menu_ActiveLink}\r\n        >\r\n          Login\r\n        </NavLink>\r\n      </>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mSTP = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mSTP, null)(Navigation);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport Button from '@material-ui/core/Button';\r\nimport s from './UserMenu.module.css';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"avatar\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      type=\"button\"\r\n      className={s.button}\r\n      onClick={onLogout}\r\n    >\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mSTP = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar:\r\n    'https://icon-library.net/images/avatar-icon-images/avatar-icon-images-10.jpg',\r\n});\r\n\r\nconst mDTP = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mSTP, mDTP)(UserMenu);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { onChangeTheme } from '../../redux/Contact/contactActions';\r\nimport contactsSelectors from '../../redux/Contact/contactsSelectors';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nimport Navigation from '../Navigation/Navigation';\r\n\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nconst Header = ({ theme, toggleTheme, isAuthenticated }) => (\r\n  <header\r\n    style={{\r\n      background: styleConxt[theme].headerBg,\r\n      color: styleConxt[theme].fontColor,\r\n    }}\r\n  >\r\n    <Navigation />\r\n    {isAuthenticated && <UserMenu />}\r\n\r\n    <div className={styles.theme_selector}>\r\n      <span className={styles.label}>\r\n        Toggle theme: {''}\r\n        {theme}\r\n      </span>\r\n      <label className={styles.switch}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={({ currentTarget }) => toggleTheme(currentTarget.checked)}\r\n        />\r\n        <span className={styles.slider}></span>\r\n      </label>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nconst mDTP = { toggleTheme: onChangeTheme };\r\nconst mSTP = state => ({\r\n  theme: contactsSelectors.getTheme(state),\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mSTP, mDTP)(Header);\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport contactsSelectors from '../../redux/Contact/contactsSelectors';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\nimport s from './Body.module.css';\r\nconst Body = ({ theme, children }) => (\r\n  <div\r\n    className={s.body}\r\n    style={{\r\n      color: styleConxt[theme].fontColor,\r\n      background: styleConxt[theme].bodybg,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst mSTP = state => ({ theme: contactsSelectors.getTheme(state) });\r\n\r\nexport default connect(mSTP, null)(Body);\r\n","import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\nimport routes from './routes';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nimport Header from './Header/Header';\r\nimport Body from './Body/Body';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <BrowserRouter>\r\n          <Header />\r\n\r\n          <Body>\r\n            <Suspense\r\n              fallback={\r\n                <h1\r\n                  style={{\r\n                    margin: '0',\r\n                  }}\r\n                >\r\n                  Loading...\r\n                </h1>\r\n              }\r\n            >\r\n              <Switch>\r\n                {routes.map(route =>\r\n                  route.private ? (\r\n                    <PrivateRoute key={route.label} {...route} />\r\n                  ) : (\r\n                    <PublicRoute key={route.label} {...route} />\r\n                  ),\r\n                )}\r\n              </Switch>\r\n            </Suspense>\r\n          </Body>\r\n        </BrowserRouter>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { getUser: authOperations.getCurrentUser })(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\nimport App from './componets/App';\r\n\r\nimport './base.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    dispatch(authActions.registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    dispatch(authActions.loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contact/contactFetchRequest');\r\nconst fetchContactsSuccess = createAction('contact/contactFetchSuccess');\r\nconst fetchContactsError = createAction('contact/contactFetchSucces');\r\n\r\nconst addContactRequest = createAction('contact/contactAddRequest');\r\nconst addContactSuccess = createAction('contact/contactAddSuccess');\r\nconst addContactError = createAction('contact/contactAddSucces');\r\n\r\nconst removeContactRequest = createAction('contact/contactRemoveAddRequest');\r\nconst removeContactSuccess = createAction('contact/contactRemoveAddSuccess');\r\nconst removeContactError = createAction('contact/contactRemoveAddSucces');\r\n\r\nconst onChangeFilter = createAction('contact/changeFilter');\r\n\r\nconst onChangeTheme = createAction('contact/changeTheme');\r\n\r\nconst overlapToggle = createAction('contact/overlapToggle');\r\n\r\nexport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  onChangeFilter,\r\n  onChangeTheme,\r\n  overlapToggle,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_navigation\":\"Navigation_menu_navigation__1rrKQ\",\"menu_link\":\"Navigation_menu_link__3mp3V\",\"menu_ActiveLink\":\"Navigation_menu_ActiveLink__4jljU\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","export const themeConfig = {\r\n  light: {\r\n    headerBg: '#d2e0e3',\r\n    fontColor: '#2a5c69',\r\n    bodybg: '#9ab7ba',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\n\r\nexport default themeConfig;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme_selector\":\"Header_theme_selector__2G-Le\",\"label\":\"Header_label__3Q0eX\",\"switch\":\"Header_switch__3QEQc\",\"slider\":\"Header_slider__3H1FT\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getError = state => state.contacts.error;\r\nconst getTheme = state => state.themePhonebook.theme;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getOverlap = state => state.contacts.overlap;\r\n\r\nconst getVisibleTasks = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [(_, id) => id, getContacts],\r\n  (id, contacts) => contacts.find(contact => contact.id === id),\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getError,\r\n  getTheme,\r\n  getFilter,\r\n  getOverlap,\r\n  getVisibleTasks,\r\n  getContactById,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactSuccess,\r\n  removeContactSuccess,\r\n  fetchContactsSuccess,\r\n  onChangeFilter,\r\n  fetchContactsError,\r\n  addContactError,\r\n  removeContactError,\r\n  overlapToggle,\r\n} from './contactActions';\r\n\r\nconst addContacts = (state, { payload }) => [...state, payload];\r\n\r\nconst removeContacts = (state, { payload }) =>\r\n  state.filter(contact => contact.id !== payload);\r\n\r\nconst onFilter = (state, { payload }) => payload;\r\n\r\nconst onError = (state, { payload }) => (payload ? payload : null);\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: addContacts,\r\n  [removeContactSuccess]: removeContacts,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [onChangeFilter]: onFilter,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: onError,\r\n  [addContactError]: onError,\r\n  [removeContactError]: onError,\r\n});\r\n\r\nconst overlap = createReducer(false, {\r\n  [overlapToggle]: overlap => !overlap,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n  overlap,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"UserMenu_button__xHBYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__1UYYF\"};"],"sourceRoot":""}